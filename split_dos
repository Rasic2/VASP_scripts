#!/bin/ksh
# Script to break the VASP DOSCAR file into segments for each atomic site. JMS NRL 5/0/02
# Modified to also align the Fermi level from the ground state to E=0.0 JMS NRL 6/19/02
# Modified to be compatible to LORBIT=11. weibingchen.thu@gmail.c (2009.11.1)
# Modified at 2019/6/16 LORBIT=12 及f轨道适配
# hui_zhou@mail.ecust.edu.cn
# <--version:0.0.4-->

f_orbital=0 #f轨道适配
EXE=$0
BIN=${EXE%/*}

if [ $# -ne 0 ]; then
	if [ $1 = "-f" ]; then
		f_orbital=1
		echo -e "\033[1;m DOSCAR including the contribution of the f orbitals! \033[0m"
	fi
fi

# Script to split the DOSCAR file into the atomic projections labeled by atom number
dosfile=DOSCAR
outfile=OUTCAR
infile=INCAR

# Token for splitting the files
token=$(sed -n '6 p' $dosfile | awk '{print $1}')

# Number of points
nl=$(sed -n '6 p' $dosfile | awk '{print $3}')

# Number of atoms
natom=$(sed -n '1 p' $dosfile | awk '{print $1}')

# Get the Fermi level if the OUTCAR file is present, else we set it to zero.
if [ -a $outfile ]; then
    echo "The" $outfile "exists, we use it to get the Fermi level, the RWIGS tag and the number of spins."
    efermi=$(grep "E-fermi" $outfile | tail -1 | awk '{print $3}')
    echo "Fermi level:" $efermi
    nspin=$(grep "ISPIN" $outfile | tail -1 | awk '{print $3}')
    if [ $nspin -eq 2 ]; then
		echo "Spin polarized calculation"
    else
		echo "Unpolarized calculation"
    fi
    lorbit=$(grep "LORBIT" $outfile | tail -1 | awk '{print $3}')
    if [ $lorbit -eq 10 ]; then
        echo "LORBIT = 10"
        echo "WARNING: not completely test for vasp.4.*"
		echo "Use at your own risk. Please check results for consistency."
		form=1
    elif [ $lorbit -eq 11 -o $lorbit -eq 12 ];then
        echo "LORBIT = 11"
        echo "WARNING: not completely test for vasp.4.*"
		echo "Use at your own risk. Please check results for consistency."
		form=2
    else
		rwigs=$(grep "RWIGS" $outfile | tail -1 | awk '{print $3}' | sed 's/\.//g')
		if [ $rwigs -eq -100 ]; then
	    	echo "RWIGS token not set"
	    	form=0
		else
	    	echo "RWIGS token set"
	    	form=1
		fi
    fi
else
    echo "The" $outfile "does not exist, we set the Fermi level to 0"
    echo "assume an unpolarized calculation, and RWIGS not set"
    form=0
    nspin=1
    efermi=0.0
fi
# Get the atomic coordinates
$BIN/vp >| tmp.dat
tail -$natom tmp.dat | awk '{printf "%s %12.8f %12.8f %12.8f \n", "#", $2, $3, $4}' >| tmp.dat2

# Total is first DOS
i=0
start=7
end=$((start+nl-1))
echo $start $end
rm -f DOS0
if [ $form -eq 1 ]; then
    while [ $i -le $natom ]; do
    	echo $i $start $end
		if [ $i -gt 0 ]; then
	    	sed -n ''$i' p' tmp.dat2 >| DOS$i
		fi
		if [ $i -gt 0 ]; then
	    	if [ $nspin -eq 2 ]; then
	    		if [ "$f_orbital" =  "1" ]; then
	    			sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5, $6, -1*$7, $8, -1*$9}' >> DOS$i
	    		else
					sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5, $6, -1*$7}' >> DOS$i
				fi
	    	else
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, $3, $4 }' >> DOS$i
	    	fi
		else
	    	if [ $nspin -eq 2 ]; then
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5 }' >> DOS$i
	    	else
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, $3 }' >> DOS$i
	    	fi
        fi
		start=$((end+2))
		end=$((start+nl-1))
		i=$((i+1))
    done
elif [ $form -eq 0 ];then
    while [ $i -le 0 ]; do
    	echo $i $start $end
		if [ $i -gt 0 ]; then
	    	sed -n ''$i' p' tmp.dat2 >| DOS$i
		fi
		if [ $i -gt 0 ]; then
	    	if [ $nspin -eq 2 ]; then
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5, $6, -1*$7}' >> DOS$i
	    	else
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, $3, $4 }' >> DOS$i
	    	fi
		else
	    	if [ $nspin -eq 2 ]; then
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5 }' >> DOS$i
	    	else
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, $3 }' >> DOS$i
	    	fi
        fi
		start=$((end+2))
		end=$((start+nl-1))
		i=$((i+1))
    done
elif [ $form -eq 2 ];then
    while [ $i -le $natom ]; do
    	echo $i $start $end
		if [ $i -gt 0 ]; then
	    	sed -n ''$i' p' tmp.dat2 >| DOS$i
		fi
		if [ $i -gt 0 ]; then
	    	if [ $nspin -eq 2 ]; then
				if [ "$f_orbital" =  "1" ];then
					sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5, $6, -1*$7,$8,-1*$9,$10,-1*$11,$12,-1*$13,$14,-1*$15,$16,-1*$17,$18,-1*$19,$20,-1*$21,$22,-1*$23,$24,-1*$25,$26,-1*$27,$28,-1*$29,$30,-1*$31,$32,-1*$33}' >> DOS$i
				else
					sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5, $6, -1*$7,$8,-1*$9,$10,-1*$11,$12,-1*$13,$14,-1*$15,$16,-1*$17,$18,-1*$19}' >> DOS$i
	    		fi
			else
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, $3, $4,$5,$6,$7,$8,$9,$10 }' >> DOS$i
	    	fi
		else
	    	if [ $nspin -eq 2 ]; then
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, -1*$3, $4, -1*$5 }' >> DOS$i
	    	else
				sed -n ''$start','$end' p' $dosfile | awk '{printf "%12.8f %12.8f %12.8f \n", $1+(-1)*'$efermi', $2, $3 }' >> DOS$i
	    	fi
        fi
		start=$((end+2))
		end=$((start+nl-1))
		i=$((i+1))
    	done
fi
exit 0
